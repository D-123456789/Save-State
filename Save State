-- Save State script
-- Mobile Friendly
wait(2)
-- Character finding Varibles
local Players = game:GetService("Players")
local player = game:GetService("Players").LocalPlayer
local character = player.Character
local UIS = game:GetService("UserInputService")
local Mouse = player:GetMouse()
local Previewation = false
local Save_State_Part
local Saved_Stated = false
local HRP = character:WaitForChild("HumanoidRootPart")
local TeleportCount = 0
local CanTeleport = true
-- Sound variables | The save state sound
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://77457926931973"
Sound.Volume = 10
-- #2 | Teleport sound
local Sound2 = Instance.new("Sound")
Sound2.Parent = game.SoundService
Sound2.SoundId = "rbxassetid://3140269034"
Sound2.Volume = 10
-- If HRP is true then works
if HRP then
	print("Hrp" .. " - Client")
else
	print("No Hrp" .. " - Client")
end
-- Mobile buttons
	-- The screenGUI
local ScreenMobile = Instance.new("ScreenGui")
ScreenMobile.Parent = player:WaitForChild("PlayerGui")
ScreenMobile.Enabled = true
ScreenMobile.ResetOnSpawn = false
-- Saving State button
local SaveMobile = Instance.new("TextButton")
SaveMobile.Parent = ScreenMobile
SaveMobile.Size = UDim2.new(0.15, 0, 0.1, 0)
SaveMobile.Position = UDim2.new(0.83,0,0.5,0)
SaveMobile.BackgroundColor = BrickColor.new("Ghost grey")
SaveMobile.BorderSizePixel = 3
SaveMobile.TextScaled = true
SaveMobile.Text = "Save State"
-- Teleporting to saved state button
local SaveMobile2 = Instance.new("TextButton")
SaveMobile2.Parent = ScreenMobile
SaveMobile2.Position = UDim2.new(0.83,0,0.36,0)
SaveMobile2.BackgroundColor = BrickColor.new("Ghost grey")
SaveMobile2.BorderSizePixel = 3
SaveMobile2.Size = UDim2.new(0.15,0,0.1,0)
SaveMobile2.TextScaled = true
SaveMobile2.Text = "TP State"
-- Save State button
SaveMobile.MouseButton1Click:Connect(function()
	Saved_Stated = true
	if Saved_Stated then
		-- The save state viewer function
		Sound2:Play()
		Save_State_Part = Instance.new("Part")
		Save_State_Part.Parent = workspace
		Save_State_Part.Rotation = Vector3.new(0,0,90)
		Save_State_Part.Size = Vector3.new(0.01,4.3,4.3)
		Save_State_Part.Anchored = true
		Save_State_Part.Color = Color3.new(0.133333, 1, 0)
		Save_State_Part.Transparency = 0.5
		Save_State_Part.Position = HRP.Position + Vector3.new(0,-3,0)
		Save_State_Part.CanCollide = false
		Save_State_Part.Shape = "Cylinder"
		Save_State_Part.Material = "Neon"
	end
end)
-- Teleport State Buttom
SaveMobile2.MouseButton1Click:Connect(function()
	-- State teleporter function
	TeleportCount += 1
	character:PivotTo(CFrame.new(Save_State_Part.Position + Vector3.new(0,3.99,0)))
	Save_State_Part.Parent = nil
	Save_State_Part:Destroy()
	Save_State_Part = nil
	Saved_Stated = false
	Sound:Play()
	-- Not needed. Should delete this
	print("Teleport Count is " .. TeleportCount .. " - Client")
	if TeleportCount == 999999 then
		print("No more teleport. Limit is: " .. TeleportCount .. " - Client")
		CanTeleport = false
	end
end)
-- F key Save State
UIS.InputBegan:Connect(function(input, proc)
	if input.KeyCode == Enum.KeyCode.F and not Saved_Stated and CanTeleport then
		Saved_Stated = true
		if Saved_Stated then
			-- F key part.
			Sound2:Play()
			Save_State_Part = Instance.new("Part")
			Save_State_Part.Parent = workspace
			Save_State_Part.Rotation = Vector3.new(0,0,90)
			Save_State_Part.Size = Vector3.new(0.01,4.3,4.3)
			Save_State_Part.Anchored = true
			Save_State_Part.Color = Color3.new(0.133333, 1, 0)
			Save_State_Part.Transparency = 0.5
			Save_State_Part.Position = HRP.Position + Vector3.new(0,-3,0)
			Save_State_Part.CanCollide = false
			Save_State_Part.Shape = "Cylinder"
			Save_State_Part.Material = "Neon"
		end
	end
	-- G key Teleport State
	if input.KeyCode == Enum.KeyCode.G and Saved_Stated and CanTeleport then
		-- G key Part
		if HRP.Anchored == true then
			print("No")
		end
		Sound:Play()
		TeleportCount += 1
		character:PivotTo(CFrame.new(Save_State_Part.Position + Vector3.new(0,3.99,0)))
		Save_State_Part.Parent = nil
		Save_State_Part:Destroy()
		Save_State_Part = nil
		Saved_Stated = false
		Sound:Play()
		-- Not needed
		print("Teleport Count is " .. TeleportCount .. " - Client")
		if TeleportCount == 9999 then
			print("No more teleport. Limit is: " .. TeleportCount .. " - Client")
			CanTeleport = false
		end
	end
end)
-- New Character function
local function onCharacterAdded(char)
	character = char
	HRP = char:WaitForChild("HumanoidRootPart")
end
-- sets new Charatcer
if player.Character then
	onCharacterAdded(player.Character)
end
player.CharacterAdded:Connect(onCharacterAdded)
-- End :)
